@startuml
start
:xpublic}
fork
 partition "sr_shovel " {
  :t_dd1_f00;
 }
fork again
 partition "sr_shovel " {
  :t_dd2_f00;
 }
end fork

fork
 ->dd1,dd2;
 :xwinnow00}
 partition "sr_winnow " {
  :t00_f10;
 }
fork again
 ->dd1,dd2;
 :xwinnow01}
 partition "sr_winnow " {
  :t01_f10;
 }
end fork

:xsarra}
partition "sr_sarra " {
 :download_f20;
 package "sarra_devdocroot   " {
  :hpfx Files|
 }
}
fork
 :xflow_public}
 split
 split again
  partition "sr_subscribe  " {
   :t_f30;
   package "sarra_devdocroot   " {
    package "downloaded_by_sub_t   " {
     :hpfx Files|
    }
   }
  }
  partition "sr_watch  " {
   :f40;
  }
  :xs_tsource}
  partition "sr_sender  " {
   :tsource2send_f50;
   package "sarra_devdocroot   " {
    package "sent_by_tsource2send   " {
     :hpfx Files|
    }
   }
  }
  :xs_tsource_output}
  fork
   partition "sr_subscribe  " {
    :u_sftp_f60;
    package "sarra_devdocroot   " {
     package "downloaded_by_sub_u   " {
      :hpfx Files|
     }
    }
   }
  fork again
   partition "sr_subscribe  " {
    :cp_f61;
    package "sarra_devdocroot   " {
     package "downloaded_by_sub_cp   " {
      :hpfx Files|
     }
    }
   }
  end fork
  stop
 end split
fork again
 fork
  partition "sr_post  " {
   :shim_f63;
   package "sarra_devdocroot   " {
     package "posted_by_shim    "{
      :hpfx files|
     }
   }
  }
  :xs_tsource_shim}
 fork again
  partition "sr_post  " {
   :test2_f61;
  }
  :xs_tsource_post}

  fork
   partition "sr_poll  " {
    :f62;
   }
   :xs_tsource_poll}
  partition "sr_subscribe  " {
    :f71;
    package "sarra_devdocroot   " {
     package "recd_by_srpoll   " {
      :hpfx files|
     }
    }
   }
  fork again
   partition "sr_subscribe  " {
    :f70;
    package "sarra_devdocroot   " {
     package "posted_by_srpost   " {
      :hpfx files|
     }
    }
   }
  end fork
 end fork
 stop
end fork

partition "sr_shovel   " {
 :pclean_f90;
 package "sarra_devdocroot   " {
  package "all subfolders   " {
   :hpfx Files|
  }
 }
 package "sarra_devdocroot   " {
  package "all subfolders   " {
   :test files (.hlink, .slink, .moved)         |
  }
 }
 if (results) then (false)
  stop
 endif
}
:xs_tsource_clean_f90}

partition "sr_shovel   " {
 :pclean_f91;
 if (results) then (false)
  stop
 endif
}
:xs_tsource_clean_f91}


partition "sr_shovel   " {
 :pclean_f92;
 package "sarra_devdocroot   " {
   :all files|
 }
 if (results) then (false)
  stop
 endif
}
:xs_tsource_clean_f92}
stop

legend right
Legend
|= |= Type |
|      ->              | messages flow            |
| labeled rectangle    | sarracenia component     |
| rounded rectangle    | flow test component      |
| margin rectangle     | file set                 |
| bracketed text       | exchange                 |
endlegend

@enduml