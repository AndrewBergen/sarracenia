@startuml
participant "sr.py" as sr
participant "cfg:sr_instance" as cfg
participant "inst:sr_<pgm>" as inst


[o-> sr: scandir(cfg, pgm, action)
activate sr

alt isdir(config_path) and listdir(config_path)
 loop config_name in listdir(config_path)
  alt is_config(config_name) and action in ['cleanup', 'declare', 'setup']
    sr -> sr: instantiate(cfg, pgm, config_name, action)
    activate sr
    alt pgm not in ['audit', 'cpost', 'cpump']
     create inst
     sr -> inst
     sr -> inst: exec_action(action, False)
     activate inst
     return
    else
     sr -> cfg: run_command(["sr_" + pgm, action, config_name])
     activate cfg
     return
    end alt
    return
  else is_config or is_include and action == 'remove'
    sr -> sr: invoke(cfg, pgm, config_name, action)
    activate sr
    alt program != 'sr_post'
     sr -> cfg: run_command([program, action, config])
     activate cfg
     return
    else action == 'status' and sleeps
     sr -> cfg: run_command([program, '-c', confpath, action])
     activate cfg
     return
    end alt
    return

  end alt
 end loop
else pgm == 'audit'
 sr -> cfg: run_command(['sr_' + pgm, action])
 activate cfg
 return
end alt
[<- sr
deactivate sr
@enduml